name: CI
on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

jobs:
  unix:
    
    runs-on: ${{ matrix.os }}
     
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]


    steps:
      - uses: actions/checkout@v2

      - name: install mamba
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: environment-dev.yml
          environment-name: xeus

      - name: install cxx compiler
        shell: bash -l {0}
        run: |
          $HOME/micromamba-bin/micromamba install cxx-compiler libuuid  -c conda-forge -y

      - name: cmake configure
        shell: bash -l {0}
        run: |
          mkdir -p build
          cd build
          cmake .. \
           -DXEUS_DOWNLOAD_GTEST=OFF \
           -DXEUS_BUILD_TESTS=ON \
           -DCMAKE_PREFIX_PATH=$CONDA_PREFIX \
           -DCMAKE_INSTALL_PREFIX=$CONDA_PREFIX 

      - name: build
        shell: bash -l {0}
        run: |
          cd build
          make -j4

      - name: Test xeus
        shell: bash -l {0}
        run: |
          cd build/test
          ctest --output-on-failure


      - name: install xeus
        shell: bash -l {0}
        run: |
          cd build
          make install

  win:
    
    runs-on: ${{ matrix.os }}
     
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest]

    steps:
      - uses: actions/checkout@v2

      - name: install mamba
        uses: mamba-org/provision-with-micromamba@main
        with:
          environment-file: environment-dev.yml
          environment-name: xeus

      - name: magic
        shell: powershell
        run: |
          micromamba shell hook -s cmd.exe -p C:\Users\runneradmin\micromamba
          Get-Content -Path C:\Users\runneradmin\micromamba\condabin\mamba_hook.bat

      - name: install cxx compiler
        shell: cmd
        run: |
          call C:\Users\runneradmin\micromamba\condabin\micromamba.bat activate xeus
          .\micromamba.exe install cxx-compiler -c conda-forge -y

      - name: cmake configure
        shell: cmd
        run: |
          call C:\Users\runneradmin\micromamba\condabin\micromamba.bat activate xeus
          mkdir -p build
          cd build
          cmake .. -G "NMake Makefiles" -DCMAKE_BUILD_TYPE=Release -DXEUS_BUILD_TESTS=ON -DDEPENDENCY_SEARCH_PREFIX="%CONDA_PREFIX%\Library" -DCMAKE_PREFIX_PATH="%CONDA_PREFIX%\Library" -DCMAKE_INSTALL_PREFIX="%CONDA_PREFIX%" 

      - name: build
        shell: cmd
        run: |
          call C:\Users\runneradmin\micromamba\condabin\micromamba.bat activate xeus
          cd build
          nmake install


      # - name: doctest
      #   shell: cmd
      #   run: |
      #     call C:\Users\runneradmin\micromamba\condabin\micromamba.bat activate xeus
      #     set PATH=%CONDA_PREFIX%;%CONDA_PREFIX%\\Scripts;%CONDA_PREFIX%\\Library\\bin;%PATH%
      #     cd build
      #     cd test
      #     xeus_tests.exe

      # - name: ctest
      #   shell: powershell
      #   run: |
      #     set PATH=%CONDA_PREFIX%;%CONDA_PREFIX%\\Scripts;%CONDA_PREFIX%\\Library\\bin;%PATH%
      #     cd build
      #     ctest --output-on-failure

      - name: ctest
        shell: cmd
        run: |
          call C:\Users\runneradmin\micromamba\condabin\micromamba.bat activate xeus
          set PATH=%CONDA_PREFIX%;%CONDA_PREFIX%\\Scripts;%CONDA_PREFIX%\\Library;%CONDA_PREFIX%\\Library\\bin;%PATH%
          cd build
          ctest --output-on-failure

      - name: build example -- cmake configure
        shell: cmd
        run: |
          call C:\Users\runneradmin\micromamba\condabin\micromamba.bat activate xeus
          cd example
          mkdir -p build
          cd build
          cmake .. -G "NMake Makefiles" -DCMAKE_BUILD_TYPE=Release  -DDEPENDENCY_SEARCH_PREFIX="%CONDA_PREFIX%\Library" -DCMAKE_PREFIX_PATH="%CONDA_PREFIX%\Library"

      - name: build example -- build
        shell: cmd
        run: |
          call C:\Users\runneradmin\micromamba\condabin\micromamba.bat activate xeus
          cd example
          cd build
          cmake --build . --target all --config Release



  win_conda:
    
    runs-on: ${{ matrix.os }}
     
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest]

    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          mamba-version: "*"
          channels: conda-forge,defaults
          channel-priority: true
          activate-environment: xeus
          environment-file: environment-dev.yml

      - name: install cxx compiler
        shell: cmd /C CALL {0}
        run: |
          mamba install cxx-compiler -c conda-forge -y

      - name: cmake configure
        shell: cmd /C CALL {0}
        run: |
          mkdir -p build
          cd build
          cmake .. -G "NMake Makefiles" ^
            -DCMAKE_BUILD_TYPE=Release ^
            -DXEUS_BUILD_TESTS=ON ^
            -DDEPENDENCY_SEARCH_PREFIX="%CONDA_PREFIX%\Library" ^
            -DCMAKE_PREFIX_PATH="%CONDA_PREFIX%\Library"  ^
            -DCMAKE_INSTALL_PREFIX="%CONDA_PREFIX%"

      - name: build
        shell: cmd /C CALL {0}
        run: |
          cd build
          cmake --build . --target all --config Release
          cmake --build . --target install --config Release

      # - name: doctest
      #   shell: cmd
      #   run: |

      #     cd build
      #     cd test
      #     ./xeus_tests.exe

      - name: ctest
        shell: cmd /C CALL {0}
        run: |
          set PATH=%PATH%;%CONDA_PREFIX%\\Library
          set PATH=%CONDA_PREFIX%;%CONDA_PREFIX%\\Scripts;%CONDA_PREFIX%\\Library\\bin;%PATH%"
          cd build
          ctest --output-on-failure


      - name: build example -- cmake configure
        shell: cmd /C CALL {0}
        run: |
          cd example
          mkdir -p build
          cd build
          cmake .. -G "NMake Makefiles" -DCMAKE_BUILD_TYPE=Release  -DDEPENDENCY_SEARCH_PREFIX="%CONDA_PREFIX%\Library" -DCMAKE_PREFIX_PATH="%CONDA_PREFIX%\Library"

      - name: build example -- build
        shell: cmd /C CALL {0}
        run: |
          cd example
          cd build
          cmake --build . --target all --config Release